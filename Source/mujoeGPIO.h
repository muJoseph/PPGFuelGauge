////////////////////////////////////////////////////////////////////////////////
// @filename: muJoeGPIO.h
// @author: Joseph Corteo Jr.
////////////////////////////////////////////////////////////////////////////////

#ifndef MUJOEGPIO_H
#define MUJOEGPIO_H

////////////////////////////////////////////////////////////////////////////////
// INCLUDE
////////////////////////////////////////////////////////////////////////////////

#include "hal_types.h"
#include "iocc2541.h"
#include "hal_mcu.h"
#include "mujoeBoardConfig.h"
#include "mujoeToolBox.h"
#include "string.h"     // For memcpy

////////////////////////////////////////////////////////////////////////////////
// DEFINES
////////////////////////////////////////////////////////////////////////////////

// GPIO ISR Vectors
//#define PORT0_VECTOR                    0x6B
//#define PORT1_VECTOR                    0x7B
//#define PORT2_VECTOR                    0x33

////////////////////////////////////////////////////////////////////////////////
// MACROS 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// TYPEDEFS 
////////////////////////////////////////////////////////////////////////////////

typedef struct gpioIntSrc_def
{
  uint8         pxInts[3];      // Index 0 = Port 0, Index 1 = Port 1, Index 2 = Port 2
  
}gpioIntSrc_t;

////////////////////////////////////////////////////////////////////////////////
// API FUNCTION PROTOS 
////////////////////////////////////////////////////////////////////////////////

bool muJoeGPIO_writePin( mujoegpio_pinid_t pinId, bool high );
bool muJoeGPIO_cfgInternalResistor( uint8 port, bool pullDown );
bool mujoeGPIO_initHardware( gpioPin_t *gpioPinTbl, uint8 numPins );

#endif // MUJOEGPIO_H